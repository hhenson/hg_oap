name: Deploy on New Tag

on:
  push:
    tags:
      - 'v_*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Get Version from Tag
        id: tag_version
        run: |
          # Get the tag name without the leading 'v_'
          VERSION=${GITHUB_REF#refs/tags/v_}
          echo "version=$VERSION" >> $GITHUB_ENV
          CURRENT_VERSION=$(grep "^version =" pyproject.toml | cut -d'"' -f2)

          # Check if the version needs to be updated
          if [ "$CURRENT_VERSION" != "$VERSION" ]; then
            echo "Updating project version from $CURRENT_VERSION to $VERSION..."
            sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
          else
            echo "Version $CURRENT_VERSION is already up-to-date."
          fi

          cat pyproject.toml | grep version

      - name: Commit Version Update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if there are changes to commit
          if git diff --quiet pyproject.toml; then
            echo "No changes detected in pyproject.toml. Skipping commit and push."
          else
            echo "Changes detected in pyproject.toml. Committing and pushing..."
            git config --local user.name "github-actions"
            git config --local user.email "github-actions@github.com"
            git add pyproject.toml
            git commit -m "Update version to $VERSION based on tag"
            git push origin HEAD:main
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Ensure latest pip
        run: python -m pip install --upgrade pip

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: |
          uv sync --all-extras --all-groups

      - name: Build hgraph
        run: uv build

      - name: Run tests
        run: uv run pytest -ra -q --dist=loadscope

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
